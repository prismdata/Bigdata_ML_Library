Social Network Service 상의 Follwer를 사용한 그래프 구조 분석

수행 방법:
 hadoop jar ankus-core2-GraphAnalysis-1.1.0.jar GraphAnalysis \
-input [입력 파일 또는 입력 폴더] \
-output [출력 데이터 폴더 경로] \
-delimiter [문서 제목과 본문의 구분자]

수행 예제:
hadoop jar ankus-core2-GraphAnalysis-1.1.0.jar GraphAnalysis \
-input /data/GraphInput.csv \
-output /result/GraphInput \
-delimiter ,

*입력 예제:
자료 구성
[시작노드, 이웃노드]
13,9
9,8
9,12
9,10
8,7
8,12
8,9
12,9
12,8
12,7
12,11
12,10
10,9
10,11
10,12
10,6
11,7
11,12
....

*출력 예제:
**/result/GraphInput/influence_basic.txt : 직접 연결되는 이웃의 갯수를 가짐
[시작노드, 이웃 노드수]@@[이웃노드 목록]
0	3.0@@[4, 5, 6]
1	3.0@@[0, 5, 2]
10	4.0@@[11, 9, 12, 6]
11	4.0@@[10, 6, 7, 12]
12	5.0@@[7, 8, 9, 10, 11]
13	1.0@@[9]
2	3.0@@[3, 1, 5]
3	3.0@@[6, 4, 5]
4	4.0@@[0, 3, 6, 5]
5	5.0@@[0, 4, 3, 2, 1]
6	7.0@@[11, 7, 3, 3, 4, 0, 10]
8	3.0@@[12, 7, 9]
9	3.0@@[10, 12, 8]
**/result/GraphInput/influence_ext.txtt: 이웃의 이웃을 검색하여 모든 연결의 이웃을 가짐
0	13@@[4, 5, 6, 0, 3, 2, 1, 11, 7, 10, 12, 9, 8]
1	13@@[0, 5, 2, 4, 6, 3, 1, 11, 7, 10, 12, 9, 8]
10	13@@[11, 9, 12, 6, 10, 7, 3, 4, 0, 8, 5, 2, 1]
11	13@@[10, 6, 7, 12, 11, 9, 3, 4, 0, 8, 5, 2, 1]
12	13@@[7, 8, 9, 10, 11, 12, 6, 3, 4, 0, 5, 2, 1]
13	13@@[9, 10, 12, 8, 11, 6, 7, 3, 4, 0, 5, 2, 1]
2	13@@[3, 1, 5, 6, 4, 0, 2, 11, 7, 10, 12, 9, 8]
3	13@@[6, 4, 5, 11, 7, 3, 0, 10, 2, 1, 12, 9, 8]
4	13@@[0, 3, 6, 5, 4, 2, 1, 11, 7, 10, 12, 9, 8]
5	13@@[0, 4, 3, 2, 1, 5, 6, 11, 7, 10, 12, 9, 8]
6	14@@[11, 7, 3, 3, 4, 0, 10, 6, 12, 9, 8, 5, 2, 1]
8	13@@[12, 7, 9, 8, 10, 11, 6, 3, 4, 0, 5, 2, 1]
9	13@@[10, 12, 8, 11, 9, 6, 7, 3, 4, 0, 5, 2, 1]


